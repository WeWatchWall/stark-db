{
  "openapi": "3.0.0",
  "servers": [
      {
          "url": "https://127.0.0.1:5984",
          "description": "Local documentation"
      }
  ],
  "info": {
      "description": "The Stark DB Server.",
      "version": "1.3.4",
      "title": "Stark DB API",
      "termsOfService": "",
      "contact": {
          "email": "adrian.burlacu@live.com",
          "name": "Adrian Burlacu",
          "url": "https://github.com/WeWatchWall/stark-db"
      },
      "license": {
          "name": "MIT",
          "url": ""
      }
  },
  "tags": [
      {
          "name": "Admin",
          "description": "The server administrator."
      },
      {
          "name": "DB Admin",
          "description": "The database administrator. The server administrator automatically gets this role."
      },
      {
          "name": "User",
          "description": "The database user. The administrators automatically get this role."
      }
  ],
  "paths": {
      "/{DB}/login": {
          "summary": "Database login",
          "description": "Login to the given database.",
          "post": {
              "summary": "DB Login",
              "description": "Logs into a database.",
              "parameters": [
                  {
                      "name": "DB",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "default": "admin",
                          "enum": [
                              "admin",
                              "database1",
                              "database2",
                              "database3"
                          ]
                      },
                      "description": "The database."
                  },
                  {
                      "name": "pid",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "default": "111",
                          "enum": [
                              "111",
                              "222",
                              "333",
                              "aaa",
                              "bbb",
                              "ccc"
                          ]
                      },
                      "description": "The process ID. This is generated by the client."
                  }
              ],
              "operationId": "Login",
              "responses": {
                  "200": {
                      "description": "The login was sucessful."
                  },
                  "401": {
                      "description": "The login failed for the credentials."
                  },
                  "403": {
                      "description": "The login failed for the DB."
                  }
              },
              "tags": [
                  "User"
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/LoginBody"
              }
          }
      },
      "/logout": {
          "summary": "User logout",
          "description": "Logout of the current user.",
          "post": {
              "summary": "User logout",
              "description": "Logs out of a user.",
              "parameters": [
                  {
                      "name": "pid",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "default": "111",
                          "enum": [
                              "111",
                              "222",
                              "333",
                              "aaa",
                              "bbb",
                              "ccc"
                          ]
                      },
                      "description": "The process ID. This is generated by the client."
                  }
              ],
              "operationId": "Logout",
              "responses": {
                  "200": {
                      "description": "The logout was successful."
                  }
              },
              "tags": [
                  "User"
              ]
          }
      },
      "/users": {
          "summary": "The users",
          "description": "Manage the users of the system.",
          "get": {
              "summary": "Get users",
              "description": "Get the users in the system. Regular users can only get their own user. Admins can get all the users.",
              "parameters": [
                  {
                      "name": "pid",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "default": "111",
                          "enum": [
                              "111",
                              "222",
                              "333",
                              "aaa",
                              "bbb",
                              "ccc"
                          ]
                      },
                      "description": "The process ID. This is generated by the client."
                  },
                  {
                      "name": "ID",
                      "in": "query",
                      "required": false,
                      "schema": {
                          "type": "string",
                          "enum": [
                              "1",
                              "2",
                              "3"
                          ]
                      },
                      "description": "The user ID.",
                      "allowEmptyValue": false
                  },
                  {
                      "name": "name",
                      "in": "query",
                      "required": false,
                      "schema": {
                          "type": "string",
                          "enum": [
                              "admin",
                              "username1",
                              "username2"
                          ]
                      },
                      "description": "The username."
                  }
              ],
              "operationId": "Get users",
              "responses": {
                  "200": {
                      "description": "The requested user(s)."
                  },
                  "401": {
                      "description": "The user is not logged in."
                  },
                  "403": {
                      "description": "The logged in user either doesn't have permission to view the user or the user wasn't found."
                  }
              },
              "tags": [
                  "User"
              ]
          },
          "post": {
              "summary": "Add user",
              "description": "Add a user. Only Admins can do this.",
              "parameters": [
                  {
                      "name": "pid",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "default": "111",
                          "enum": [
                              "111",
                              "222",
                              "333",
                              "aaa",
                              "bbb",
                              "ccc"
                          ]
                      },
                      "description": "The process ID. This is generated by the client."
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/AddUserBody"
              },
              "operationId": "Add user",
              "responses": {
                  "200": {
                      "description": "The user was added."
                  },
                  "401": {
                      "description": "The user is not logged in."
                  },
                  "403": {
                      "description": "The logged in user doesn't have permission to add the user or the user entity had an error."
                  }
              },
              "tags": [
                  "Admin"
              ]
          },
          "put": {
              "summary": "Set user",
              "description": "Set a user. Regular users can only set their own user. Admins can set any user.",
              "parameters": [
                  {
                      "name": "pid",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "default": "111",
                          "enum": [
                              "111",
                              "222",
                              "333",
                              "aaa",
                              "bbb",
                              "ccc"
                          ]
                      },
                      "description": "The process ID. This is generated by the client."
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/SetUserBody"
              },
              "operationId": "Set user",
              "responses": {
                  "200": {
                      "description": "The user was set."
                  },
                  "401": {
                      "description": "The user is not logged in."
                  },
                  "403": {
                      "description": "The logged in user either doesn't have permission to set the user or the user entity was not found."
                  }
              },
              "tags": [
                  "User"
              ]
          },
          "delete": {
              "summary": "Delete user",
              "description": "Delete a user. Regular users can only delete their own user. Admins can delete any user.",
              "parameters": [
                  {
                      "name": "pid",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "default": "111",
                          "enum": [
                              "111",
                              "222",
                              "333",
                              "aaa",
                              "bbb",
                              "ccc"
                          ]
                      },
                      "description": "The process ID. This is generated by the client."
                  },
                  {
                      "name": "ID",
                      "in": "query",
                      "required": false,
                      "schema": {
                          "type": "string",
                          "enum": [
                              "1",
                              "2",
                              "3"
                          ]
                      },
                      "description": "The user ID"
                  },
                  {
                      "name": "name",
                      "in": "query",
                      "required": false,
                      "schema": {
                          "type": "string",
                          "enum": [
                              "admin",
                              "username1",
                              "username2"
                          ]
                      },
                      "description": "The username"
                  }
              ],
              "operationId": "Delete user",
              "responses": {
                  "200": {
                      "description": "The user was deleted"
                  },
                  "401": {
                      "description": "The user is not logged in."
                  },
                  "403": {
                      "description": "The logged in user either doesn't have permission to delete the user or the user wasn't found."
                  }
              },
              "tags": [
                  "User"
              ]
          }
      },
      "/DBs": {
          "summary": "The DBs",
          "description": "Manage the DBs of the system.",
          "get": {
              "summary": "Get DBs",
              "description": "Get the DBs in the system. Regular users can only get their own DBs. Admins can get all the DBs.",
              "parameters": [
                  {
                      "name": "pid",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "default": "111",
                          "enum": [
                              "111",
                              "222",
                              "333",
                              "aaa",
                              "bbb",
                              "ccc"
                          ]
                      },
                      "description": "The process ID. This is generated by the client."
                  },
                  {
                      "name": "ID",
                      "in": "query",
                      "required": false,
                      "schema": {
                          "type": "string",
                          "enum": [
                              "1",
                              "2",
                              "3",
                              "4"
                          ]
                      },
                      "description": "The DB ID.",
                      "allowEmptyValue": false
                  },
                  {
                      "name": "name",
                      "in": "query",
                      "required": false,
                      "schema": {
                          "type": "string",
                          "enum": [
                              "admin",
                              "database1",
                              "database2",
                              "database3"
                          ]
                      },
                      "description": "The DB name."
                  }
              ],
              "operationId": "Get DBs",
              "responses": {
                  "200": {
                      "description": "The requested DB(s)."
                  },
                  "401": {
                      "description": "The user is not logged in."
                  },
                  "403": {
                      "description": "The logged in user either doesn't have permission to get the DB or the DB wasn't found."
                  }
              },
              "tags": [
                  "User"
              ]
          },
          "post": {
              "summary": "Add DB",
              "description": "Add a DB. Only Admins can do this.",
              "parameters": [
                  {
                      "name": "pid",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "default": "111",
                          "enum": [
                              "111",
                              "222",
                              "333",
                              "aaa",
                              "bbb",
                              "ccc"
                          ]
                      },
                      "description": "The process ID. This is generated by the client."
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/AddDBBody"
              },
              "operationId": "Add DB",
              "responses": {
                  "200": {
                      "description": "The DB was added."
                  }
              },
              "tags": [
                  "Admin"
              ]
          },
          "put": {
              "summary": "Set DB",
              "description": "Set a DB. DB Admins can update their own DBs while Admins can update all DBs.",
              "parameters": [
                  {
                      "name": "pid",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "default": "111",
                          "enum": [
                              "111",
                              "222",
                              "333",
                              "aaa",
                              "bbb",
                              "ccc"
                          ]
                      },
                      "description": "The process ID. This is generated by the client."
                  }
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/SetDBBody"
              },
              "operationId": "Set DB",
              "responses": {
                  "200": {
                      "description": "The DB was set."
                  }
              },
              "tags": [
                  "DB Admin"
              ]
          },
          "delete": {
              "summary": "Delete DB",
              "description": "Delete a DB. DB Admins can delete their own DBs while Admins can delete any DB.",
              "parameters": [
                  {
                      "name": "pid",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "default": "111",
                          "enum": [
                              "111",
                              "222",
                              "333",
                              "aaa",
                              "bbb",
                              "ccc"
                          ]
                      },
                      "description": "The process ID. This is generated by the client."
                  },
                  {
                      "name": "ID",
                      "in": "query",
                      "required": false,
                      "schema": {
                          "type": "string",
                          "enum": [
                              "1",
                              "2",
                              "3",
                              "4"
                          ]
                      },
                      "description": "The DB ID"
                  },
                  {
                      "name": "name",
                      "in": "query",
                      "required": false,
                      "schema": {
                          "type": "string",
                          "enum": [
                              "admin",
                              "database1",
                              "database2",
                              "database3"
                          ]
                      },
                      "description": "The DB name"
                  }
              ],
              "operationId": "Delete DB",
              "responses": {
                  "200": {
                      "description": "The DB was deleted"
                  }
              },
              "tags": [
                  "DB Admin"
              ]
          }
      },
      "/{DB}/query": {
          "summary": "Database login",
          "description": "Login to the given database.",
          "post": {
              "summary": "DB Query",
              "description": "Queries a database.",
              "parameters": [
                  {
                      "name": "DB",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "default": "admin",
                          "enum": [
                              "admin",
                              "database1",
                              "database2",
                              "database3"
                          ]
                      },
                      "description": "The database."
                  },
                  {
                      "name": "pid",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "default": "111",
                          "enum": [
                              "111",
                              "222",
                              "333",
                              "aaa",
                              "bbb",
                              "ccc"
                          ]
                      },
                      "description": "The process ID. This is generated by the client."
                  }
              ],
              "operationId": "Query",
              "responses": {
                  "200": {
                      "description": "The successful query results."
                  },
                  "401": {
                      "description": "The login failed for the credentials."
                  },
                  "403": {
                      "description": "The login failed for the DB."
                  },
                  "500": {
                      "description": "The server was not able to respond to the query."
                  }
              },
              "tags": [
                  "User"
              ],
              "requestBody": {
                  "$ref": "#/components/requestBodies/QueryBody"
              }
          }
      }
  },
  "components": {
      "schemas": {},
      "requestBodies": {
          "LoginBody": {
              "description": "Login",
              "required": true,
              "content": {
                  "application/json": {
                      "schema": {
                          "type": "object",
                          "properties": {
                              "username": {
                                  "type": "string",
                                  "description": "The username."
                              },
                              "password": {
                                  "type": "string",
                                  "description": "The password."
                              }
                          }
                      },
                      "examples": {
                          "admin": {
                              "value": {
                                  "username": "admin",
                                  "password": "admin"
                              }
                          },
                          "user1": {
                              "value": {
                                  "username": "username1",
                                  "password": "password1"
                              }
                          },
                          "user2": {
                              "value": {
                                  "username": "username2",
                                  "password": "password2"
                              }
                          }
                      }
                  }
              }
          },
          "AddUserBody": {
              "description": "Add a user.",
              "required": true,
              "content": {
                  "application/json": {
                      "schema": {
                          "type": "object",
                          "properties": {
                              "name": {
                                  "type": "string",
                                  "description": "The username."
                              },
                              "password": {
                                  "type": "string",
                                  "description": "The password."
                              },
                              "salt": {
                                  "type": "string",
                                  "description": "The salt. Ignored."
                              }
                          }
                      },
                      "examples": {
                          "admin": {
                              "value": {
                                  "name": "admin",
                                  "password": "admin",
                                  "salt": ""
                              }
                          },
                          "user1": {
                              "value": {
                                  "name": "username1",
                                  "password": "password1",
                                  "salt": ""
                              }
                          },
                          "user2": {
                              "value": {
                                  "name": "username2",
                                  "password": "password2",
                                  "salt": ""
                              }
                          }
                      }
                  }
              }
          },
          "SetUserBody": {
              "description": "Set a user.",
              "required": true,
              "content": {
                  "application/json": {
                      "schema": {
                          "type": "object",
                          "properties": {
                              "ID": {
                                  "type": "integer",
                                  "description": "The user ID."
                              },
                              "name": {
                                  "type": "string",
                                  "description": "The username."
                              },
                              "password": {
                                  "type": "string",
                                  "description": "The password."
                              },
                              "salt": {
                                  "type": "string",
                                  "description": "The salt. Ignored."
                              }
                          }
                      },
                      "examples": {
                          "admin": {
                              "value": {
                                  "ID": 1,
                                  "name": "admin",
                                  "password": "admin",
                                  "salt": ""
                              }
                          },
                          "user1": {
                              "value": {
                                  "ID": 2,
                                  "name": "username1",
                                  "password": "password1",
                                  "salt": ""
                              }
                          },
                          "user2": {
                              "value": {
                                  "ID": 3,
                                  "name": "username2",
                                  "password": "password2",
                                  "salt": ""
                              }
                          }
                      }
                  }
              }
          },
          "AddDBBody": {
              "description": "Add a DB.",
              "required": true,
              "content": {
                  "application/json": {
                      "schema": {
                          "type": "object",
                          "properties": {
                              "name": {
                                  "type": "string",
                                  "description": "The username."
                              },
                              "admins": {
                                  "type": "array",
                                  "description": "The admins.",
                                  "items": {
                                      "type": "integer"
                                  }
                              },
                              "users": {
                                  "type": "array",
                                  "description": "The users.",
                                  "items": {
                                      "type": "integer"
                                  }
                              }
                          }
                      },
                      "examples": {
                          "admin": {
                              "value": {
                                  "name": "admin",
                                  "admins": [
                                      1
                                  ],
                                  "users": []
                              }
                          },
                          "database1": {
                              "value": {
                                  "name": "database1",
                                  "admins": [
                                      1,
                                      2
                                  ],
                                  "readers": [],
                                  "writers": []
                              }
                          },
                          "database2": {
                              "value": {
                                  "name": "database2",
                                  "admins": [
                                      1
                                  ],
                                  "readers": [3],
                                  "writers": [
                                    2
                                  ]
                              }
                          },
                          "database3": {
                              "value": {
                                  "name": "database3",
                                  "admins": [
                                      1
                                  ],
                                  "readers": [
                                    2
                                  ],
                                  "writers": [3]
                              }
                          }
                      }
                  }
              }
          },
          "SetDBBody": {
              "description": "Set a DB.",
              "required": true,
              "content": {
                  "application/json": {
                      "schema": {
                          "type": "object",
                          "properties": {
                              "ID": {
                                  "type": "integer",
                                  "description": "The DB ID."
                              },
                              "name": {
                                  "type": "string",
                                  "description": "The DB name."
                              },
                              "admins": {
                                  "type": "array",
                                  "description": "The admins.",
                                  "items": {
                                      "type": "integer"
                                  }
                              },
                              "users": {
                                  "type": "array",
                                  "description": "The users.",
                                  "items": {
                                      "type": "integer"
                                  }
                              }
                          }
                      },
                      "examples": {
                          "admin": {
                              "value": {
                                  "ID": 1,
                                  "name": "admin",
                                  "admins": [
                                      1
                                  ],
                                  "readers": [],
                                  "writers": []
                              }
                          },
                          "database1": {
                              "value": {
                                  "ID": 2,
                                  "name": "database1",
                                  "admins": [
                                      1,
                                      3
                                  ],
                                  "readers": [
                                      2
                                  ],
                                  "writers": []
                              }
                          },
                          "database2": {
                              "value": {
                                  "ID": 3,
                                  "name": "database2",
                                  "admins": [
                                      1
                                  ],
                                  "readers": [
                                      2,
                                      3
                                  ],
                                  "writers": []
                              }
                          },
                          "database3": {
                              "value": {
                                  "ID": 4,
                                  "name": "database3",
                                  "admins": [
                                      1
                                  ],
                                  "readers": [
                                      2
                                  ],
                                  "writers": [
                                    3
                                  ]
                              }
                          }
                      }
                  }
              }
          },
          "QueryBody": {
            "description": "Query",
            "required": true,
            "content": {
                "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "query": {
                                "type": "string",
                                "description": "The query."
                            },
                            "params": {
                                "type": "array",
                                "description": "The query parameters.",
                                "items":{
                                    "type": "object"
                                } 
                            }
                        }
                    },
                    "examples": {
                        "create table": {
                            "value": {
                                "query": "CREATE TABLE IF NOT EXISTS \"user\" (\"id\" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, \"firstName\" VARCHAR NOT NULL, \"lastName\" VARCHAR NOT NULL, \"age\" INTEGER NOT NULL);",
                                "params": []
                            }
                        },
                        "insert data": {
                            "value": {
                              "query": "INSERT OR REPLACE INTO user  (firstName, lastName, age) VALUES (?, ?, ?);",
                              "params": ["Timber", "Saw", 25]
                            }
                        },
                        "select data": {
                            "value": {
                                "query": "SELECT * FROM user;",
                                "params": []
                            }
                        }
                    }
                }
            }
        }
      },
      "links": {},
      "callbacks": {}
  },
  "security": []
}